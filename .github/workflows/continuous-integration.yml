name: "Continuous Integration"

on:
  workflow_call:
    inputs:
      php-versions:
        description: "The PHP versions to use when running the job"
        default: '["7.2", "7.3", "7.4", "8.0", "8.1", "8.2", "8.3"]'
        required: false
        type: "string"
      composer-root-version:
        description: "The version of the package being tested, in case of circular dependencies."
        required: false
        type: "string"
      composer-options:
        description: "Additional flags for the composer install command."
        default: "--prefer-dist"
        required: false
        type: "string"
    secrets:
      CODECOV_TOKEN:
        required: true

env:
  fail-fast: true

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-24.04"

    strategy:
      matrix:
        php-version: "${{ fromJson(inputs.php-versions) }}"
        dependencies:
          - "highest"
        include:
          - php-version: "${{ fromJson(inputs.php-versions)[0] }}"
            dependencies: "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - name: "Install PHP with PCOV"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.php-version != '7.1' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "zend.assertions=1"

      - name: "Install PHP with XDebug"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.php-version == '7.1' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "xdebug"
          ini-values: "zend.assertions=1"

      - name: "Set COMPOSER_ROOT_VERSION"
        run: |
          echo "COMPOSER_ROOT_VERSION=${{ inputs.composer-root-version }}" >> $GITHUB_ENV
        if: "${{ inputs.composer-root-version }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run PHPUnit"
        run: "vendor/bin/phpunit --coverage-clover=coverage.xml"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v4"
        with:
          name: "phpunit-${{ matrix.php-version }}-${{ matrix.dependencies }}.coverage"
          path: "coverage.xml"

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-24.04"
    needs:
      - "phpunit"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v4"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v4"
        with:
          directory: "reports"
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
